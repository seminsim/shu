// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SHU.FlatBuffers.Pong
{

using global::System;
using global::FlatBuffers;

public struct Pong : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Pong GetRootAsPong(ByteBuffer _bb) { return GetRootAsPong(_bb, new Pong()); }
  public static Pong GetRootAsPong(ByteBuffer _bb, Pong obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool PongBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "pong"); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Pong __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long ClientTime { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ServerTime { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }

  public static Offset<Pong> CreatePong(FlatBufferBuilder builder,
      long clientTime = 0,
      long serverTime = 0) {
    builder.StartObject(2);
    Pong.AddServerTime(builder, serverTime);
    Pong.AddClientTime(builder, clientTime);
    return Pong.EndPong(builder);
  }

  public static void StartPong(FlatBufferBuilder builder) { builder.StartObject(2); }
  public static void AddClientTime(FlatBufferBuilder builder, long clientTime) { builder.AddLong(0, clientTime, 0); }
  public static void AddServerTime(FlatBufferBuilder builder, long serverTime) { builder.AddLong(1, serverTime, 0); }
  public static Offset<Pong> EndPong(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Pong>(o);
  }
  public static void FinishPongBuffer(FlatBufferBuilder builder, Offset<Pong> offset) { builder.Finish(offset.Value, "pong"); }
};


}
